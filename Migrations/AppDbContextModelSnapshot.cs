// <auto-generated />
using System;
using BankTransferService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankTransferService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Card", b =>
                {
                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<int>("FailedAttempts")
                        .HasColumnType("int");

                    b.Property<string>("HolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardNumber");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CardNumber = "6037991234567890",
                            Balance = 1500000f,
                            FailedAttempts = 0,
                            HolderName = "Alice Johnson",
                            Id = 0,
                            IsActive = true,
                            Password = "1234"
                        },
                        new
                        {
                            CardNumber = "6274120987654321",
                            Balance = 500000f,
                            FailedAttempts = 0,
                            HolderName = "Bob Smith",
                            Id = 0,
                            IsActive = true,
                            Password = "9999"
                        },
                        new
                        {
                            CardNumber = "5022291111222233",
                            Balance = 2500000f,
                            FailedAttempts = 0,
                            HolderName = "Charlie Brown",
                            Id = 0,
                            IsActive = true,
                            Password = "1111"
                        },
                        new
                        {
                            CardNumber = "4580123456789012",
                            Balance = 750000f,
                            FailedAttempts = 0,
                            HolderName = "David Miller",
                            Id = 0,
                            IsActive = true,
                            Password = "2222"
                        },
                        new
                        {
                            CardNumber = "6219865432109876",
                            Balance = 1250000f,
                            FailedAttempts = 0,
                            HolderName = "Emma Wilson",
                            Id = 0,
                            IsActive = true,
                            Password = "3333"
                        },
                        new
                        {
                            CardNumber = "5892109988776655",
                            Balance = 300000f,
                            FailedAttempts = 0,
                            HolderName = "Frank Thomas",
                            Id = 0,
                            IsActive = true,
                            Password = "4444"
                        });
                });

            modelBuilder.Entity("Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("DestinationCardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsSuccessfull")
                        .HasColumnType("bit");

                    b.Property<string>("SourceCardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DestinationCardId");

                    b.HasIndex("SourceCardId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 200000f,
                            DestinationCardId = "6274120987654321",
                            IsSuccessfull = true,
                            SourceCardId = "6037991234567890",
                            TransactionDate = new DateTime(2025, 1, 3, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 150000f,
                            DestinationCardId = "5022291111222233",
                            IsSuccessfull = true,
                            SourceCardId = "6274120987654321",
                            TransactionDate = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Transaction", b =>
                {
                    b.HasOne("Card", "DestinationCard")
                        .WithMany("DestinationTransactions")
                        .HasForeignKey("DestinationCardId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Card", "SourceCard")
                        .WithMany("SourceTransactions")
                        .HasForeignKey("SourceCardId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DestinationCard");

                    b.Navigation("SourceCard");
                });

            modelBuilder.Entity("Card", b =>
                {
                    b.Navigation("DestinationTransactions");

                    b.Navigation("SourceTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
